"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.genRenderRightContent = exports.default = void 0;

var _default = function _default(userConfig, path, formatMessage, hasAccess) {
  return "import React, { useState, useEffect } from \"react\";\nimport { ApplyPluginsType, useModel ".concat( // 没有 formatMessage 就不打开国际化
  formatMessage ? ", useIntl" : '').concat(hasAccess ? ', traverseModifyRoutes, useAccess' : '', " } from \"umi\";\nimport { plugin } from \"../core/umiExports\";\nimport LayoutComponent from '").concat(path, "';\n\nexport default props => {\n  const [runtimeConfig, setRuntimeConfig] = useState(null);\n\n  const initialInfo = (useModel && useModel(\"@@initialState\")) || {\n    initialState: undefined,\n    loading: false,\n    setInitialState: null\n  }; // plugin-initial-state \u672A\u5F00\u542F\n\n  ").concat(hasAccess ? 'const access = useAccess?.();' : '', "\n\n  useEffect(() => {\n    const useRuntimeConfig =\n      plugin.applyPlugins({\n        key: \"layout\",\n        type: ApplyPluginsType.modify,\n        initialValue: {\n          ...initialInfo,\n          ").concat(hasAccess ? 'traverseModifyRoutes: (menuData) => {return traverseModifyRoutes?.(menuData, access);},' : '', "\n        },\n      }) || {};\n    if (useRuntimeConfig instanceof Promise) {\n      useRuntimeConfig.then((config) => {\n        setRuntimeConfig(config);\n      });\n      return;\n    }\n    setRuntimeConfig(useRuntimeConfig);\n  }, [initialInfo?.initialState, ").concat(hasAccess ? 'access' : '', "]);\n\n  const userConfig = {\n    ...").concat(JSON.stringify(userConfig).replace(/"/g, "'"), ",\n    ...runtimeConfig || {}\n  };\n\n  ").concat(formatMessage ? 'const { formatMessage } = useIntl();' : '', "\n\n  if(!runtimeConfig){\n    return null\n  }\n\n  return React.createElement(LayoutComponent, {\n    userConfig,\n    ").concat(formatMessage ? 'formatMessage,' : '', "\n    ...props\n  });\n};\n");
};

exports.default = _default;

var genRenderRightContent = function genRenderRightContent(props) {
  if (!props.initialState) {
    return "export default function renderRightContent() {\n    return null;\n  }\n  ";
  }

  return "import React from 'react';\n  import { Avatar, Dropdown, Menu, Spin } from 'antd';\n  ".concat(props.locale ? "import { SelectLang } from 'umi';" : '', "\n  import { LogoutOutlined } from '@ant-design/icons';\n  import { ILayoutRuntimeConfig } from '../types/interface.d';\n\n  export default function renderRightContent(\n    runtimeLayout: ILayoutRuntimeConfig,\n    loading: boolean,\n    initialState: any,\n    setInitialState: any,\n  ) {\n    if (runtimeLayout.rightRender) {\n      return runtimeLayout.rightRender(\n        initialState,\n        setInitialState,\n        runtimeLayout,\n      );\n    }\n\n    const menu = (\n      <Menu className=\"umi-plugin-layout-menu\">\n        <Menu.Item\n          key=\"logout\"\n          onClick={() =>\n            runtimeLayout.logout && runtimeLayout?.logout(initialState)\n          }\n        >\n          <LogoutOutlined />\n          \u9000\u51FA\u767B\u5F55\n        </Menu.Item>\n      </Menu>\n    );\n\n    const avatar = (\n      <span className=\"umi-plugin-layout-action\">\n        <Avatar\n          size=\"small\"\n          className=\"umi-plugin-layout-avatar\"\n          src={\n            initialState?.avatar ||\n            'https://gw.alipayobjects.com/zos/antfincdn/XAosXuNZyF/BiazfanxmamNRoxxVxka.png'\n          }\n          alt=\"avatar\"\n        />\n        <span className=\"umi-plugin-layout-name\">{initialState?.name}</span>\n      </span>\n    );\n\n    if (loading) {\n      return (\n        <div className=\"umi-plugin-layout-right\">\n          <Spin size=\"small\" style={{ marginLeft: 8, marginRight: 8 }} />\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"umi-plugin-layout-right anticon\">\n        {runtimeLayout.logout ? (\n          <Dropdown overlay={menu} overlayClassName=\"umi-plugin-layout-container\">\n            {avatar}\n          </Dropdown>\n        ) : (\n          avatar\n        )}\n        ").concat(props.locale ? '{SelectLang && <SelectLang />}' : '', "\n      </div>\n    );\n  }\n  ");
};

exports.genRenderRightContent = genRenderRightContent;