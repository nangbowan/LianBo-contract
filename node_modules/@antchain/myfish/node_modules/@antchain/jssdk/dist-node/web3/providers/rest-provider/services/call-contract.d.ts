import { RestRequest } from "../../../../utils/rest-request";
import { AccessId, BizId, Hash, ContractRaw, Period, Timestamp, RestMethods, VmType, TEEPublicKey, SecretKey } from "../../../../types/web3";
export interface CallContractParams {
    hash: Hash;
    method: RestMethods.callWasmContract | RestMethods.callContract;
    accessId: AccessId;
    bizid: BizId;
    contractName?: string;
    orderId?: string;
    requestStr: {
        vmTypeEnum: VmType;
        timestamp: Timestamp;
        hash: Hash;
        nonceV?: number;
        callContractRaw?: ContractRaw;
        callWasmContractRaw?: ContractRaw;
        methodSignature?: string;
        acctId?: {
            data?: string;
        };
        contractId?: {
            data?: string;
        };
        period?: Period;
        teePublicKey?: TEEPublicKey;
        secretKey?: SecretKey;
        orderId?: string;
        isLocalTransaction?: boolean;
    };
}
export declare function callContract<ReturnType>(params: CallContractParams, request: RestRequest): Promise<ReturnType>;
