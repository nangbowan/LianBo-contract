import { Buffer } from 'safe-buffer';
export declare function getKeyInfo(keyStr: any, passphrase: any): {
    privateKey: any;
    publicKey: any;
};
export declare function getKeyInfoFromPEM(privKeyStr: any, passphrase: any): {
    privateKey: any;
    publicKey: any;
};
export declare function generateECKey(): {
    privateKey: any;
    publicKey: Uint8Array;
};
export declare function sign(aMsg: any, key: any): Buffer;
export declare function generateAESKey(aesPassword: any, aHash: any): any;
export declare function randomBytes(num: any): any;
export declare function randomNumber(): number;
export declare function sealSGXWithPassword(pub_key: any, data_hex: any, aes_password: any, hash: any, encrypt_type: any): string;
export declare function sealRsaSGX(rsaPubKey: any, data_hex: any, aesKey: any): string;
export declare function sealEccSGX(eccPubKey: any, data_hex: any, aesKey: any): string;
export declare function encryptAES(aData: any, aKey: any, iv: any): {
    data: any;
    authTag: any;
};
export declare function decryptAES(aData: any, aKey: any): string;
export declare function decryptAESWithIV(aData: any, aKey: any, aIv: any, aTag: any): string;
export declare function decryptAESWithPassword(data: any, aes_password: any, hash: any): string;
export declare function decryptAESTX(aData: any, aKey: any): string;
