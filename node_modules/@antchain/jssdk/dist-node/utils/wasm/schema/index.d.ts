declare const schema: {
    name: string;
    Identity: string;
    checksum160: string;
    checksum256: string;
    checksum512: string;
    signature: string;
    public_key: string;
    message_type: string;
    symbol: string;
    symbol_code: string;
    field_name: string;
    account_name: string;
    permission_name: string;
    type_name: string;
    table_name: string;
    scope_name: string;
    action_name: string;
    time_point: string;
    time_point_sec: string;
    timestamp: string;
    block_timestamp_type: string;
    block_id: string;
    checksum_type: string;
    checksum256_type: string;
    checksum512_type: string;
    checksum160_type: string;
    sha256: string;
    sha512: string;
    sha160: string;
    weight_type: string;
    block_num_type: string;
    share_type: string;
    digest_type: string;
    context_free_type: string;
    unsigned_int: string;
    bool: string;
    extensions_type: {
        base: string;
        fields: {
            type: string;
            data: string;
        };
    };
    transaction_header: {
        base: string;
        fields: {
            expiration: string;
            ref_block_num: string;
            ref_block_prefix: string;
            max_net_usage_words: string;
            max_cpu_usage_ms: string;
            delay_sec: string;
        };
    };
    transaction: {
        base: string;
        fields: {
            context_free_actions: string;
            actions: string;
            transaction_extensions: string;
        };
    };
    signed_transaction: {
        base: string;
        fields: {
            signatures: string;
            context_free_data: string;
        };
    };
    fields: string;
    field_def: {
        fields: {
            name: string;
            type: string;
        };
    };
    type_def: {
        base: string;
        fields: {
            new_type_name: string;
            type: string;
        };
    };
    struct_def: {
        base: string;
        fields: {
            name: string;
            base: string;
            fields: string;
        };
    };
    clause_pair: {
        base: string;
        fields: {
            id: string;
            body: string;
        };
    };
    error_message: {
        base: string;
        fields: {
            error_code: string;
            error_msg: string;
        };
    };
    abi_def: {
        base: string;
        fields: {
            version: string;
            types: string;
            structs: string;
            actions: string;
            tables: string;
            ricardian_clauses: string;
            error_messages: string;
            abi_extensions: string;
        };
    };
    table_def: {
        base: string;
        fields: {
            name: string;
            index_type: string;
            key_names: string;
            key_types: string;
            type: string;
        };
    };
    permission_level: {
        base: string;
        fields: {
            actor: string;
            permission: string;
        };
    };
    action: {
        base: string;
        fields: {
            name: string;
        };
    };
    action_def: {
        base: string;
        fields: {
            name: string;
            type: string;
        };
    };
};
export default schema;
