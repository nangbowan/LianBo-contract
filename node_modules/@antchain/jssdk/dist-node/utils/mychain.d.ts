/// <reference types="node" />
import { generateAESKey, decryptAESWithPassword } from "./myutils";
import { decryptTXWithAES } from "./config";
export interface Abier {
    fromBuffer: (type: string, output: Buffer) => any;
    toBuffer: (type: string, input: any) => Buffer;
    schema: any;
}
export declare function getAbier(contractName: string, abi: string): Abier;
export interface UserInfo {
    publicKey: Buffer;
    privateKey: Buffer;
}
export declare function getUserInfo(accountPrivateKey: string, accountPrivateKeyPassword: string): Promise<UserInfo>;
export { decryptAESWithPassword, generateAESKey, decryptTXWithAES };
export declare function toUTF8(value: string): string;
export declare function convertHex2Buffer(value: string): Buffer;
export declare function convertHex2Base64(value: string): string;
export declare function remove0x(value: string): string;
