import { RestRequest } from "../../../../utils/rest-request";
import { BizId, AccessId, TxType, RestMethods, SecretKey, Hash, Timestamp } from "../../../../types/web3";
export interface QueryTransactionParams {
    bizid: BizId;
    accessId: AccessId;
    method: RestMethods.queryTransactionFromBlockchain;
    hash: Hash;
    secretKey?: SecretKey;
}
export interface QueryTransactionResult {
    blockHeight: number;
    blockVersion: number;
    category: number;
    content: string;
    createTime: Timestamp;
    hash: string;
    referenceCount: number;
    transactionV10: {
        data: string;
        extentions: any[];
        from: string;
        gas: number;
        nonce: number;
        period: number;
        signatureList: string[];
        timestamp: Timestamp;
        to: string;
        txType: TxType;
        value: number;
    };
}
export declare function queryTransaction(params: QueryTransactionParams, request: RestRequest): Promise<QueryTransactionResult>;
