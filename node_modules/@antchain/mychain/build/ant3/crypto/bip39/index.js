"use strict";function _toConsumableArray(r){return _arrayWithoutHoles(r)||_iterableToArray(r)||_unsupportedIterableToArray(r)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(r,e){if(r){if("string"==typeof r)return _arrayLikeToArray(r,e);var t=Object.prototype.toString.call(r).slice(8,-1);return"Map"===(t="Object"===t&&r.constructor?r.constructor.name:t)||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,e):void 0}}function _iterableToArray(r){if("undefined"!=typeof Symbol&&null!=r[Symbol.iterator]||null!=r["@@iterator"])return Array.from(r)}function _arrayWithoutHoles(r){if(Array.isArray(r))return _arrayLikeToArray(r)}function _arrayLikeToArray(r,e){(null==e||e>r.length)&&(e=r.length);for(var t=0,n=new Array(e);t<e;t++)n[t]=r[t];return n}Object.defineProperty(exports,"__esModule",{value:!0});var createHash=require("create-hash"),Buffer=require("safe-buffer").Buffer,pbkdf2_1=require("../pbkdf2/index"),randomBytes=require("../publicEncrypt/randombytes"),_wordlists_1=require("./_wordlists"),DEFAULT_WORDLIST=_wordlists_1._default,INVALID_MNEMONIC="Invalid mnemonic",INVALID_ENTROPY="Invalid entropy",INVALID_CHECKSUM="Invalid mnemonic checksum",WORDLIST_REQUIRED="A wordlist is required but a default could not be found.\nPlease explicitly pass a 2048 word array explicitly.";function lpad(r,e,t){for(;r.length<t;)r=e+r;return r}function binaryToByte(r){return parseInt(r,2)}function bytesToBinary(r){return r.map(function(r){return lpad(r.toString(2),"0",8)}).join("")}function deriveChecksumBits(r){var e=8*r.length/32;return bytesToBinary(_toConsumableArray(createHash("sha256").update(r).digest())).slice(0,e)}function salt(r){return"mnemonic"+(r||"")}function mnemonicToSeedSync(r,e){r=Buffer.from(r||"","utf8"),e=Buffer.from(salt(e||""),"utf8");return pbkdf2_1.pbkdf2Sync(r,e,2048,64,"sha512")}function mnemonicToEntropy(r,e){if(!(e=e||DEFAULT_WORDLIST))throw new Error(WORDLIST_REQUIRED);var t=(r||"").split(" ");if(t.length%3!=0)throw new Error(INVALID_MNEMONIC);var n=t.map(function(r){r=e.indexOf(r);if(-1===r)throw new Error(INVALID_MNEMONIC);return lpad(r.toString(2),"0",11)}).join(""),r=32*Math.floor(n.length/33),t=n.slice(0,r),r=n.slice(r),t=t.match(/(.{1,8})/g).map(binaryToByte);if(t.length<16)throw new Error(INVALID_ENTROPY);if(32<t.length)throw new Error(INVALID_ENTROPY);if(t.length%4!=0)throw new Error(INVALID_ENTROPY);t=Buffer.from(t);if(deriveChecksumBits(t)!==r)throw new Error(INVALID_CHECKSUM);return t.toString("hex")}function entropyToMnemonic(r,e){if(Buffer.isBuffer(r)||(r=Buffer.from(r,"hex")),!(e=e||DEFAULT_WORDLIST))throw new Error(WORDLIST_REQUIRED);if(r.length<16)throw new TypeError(INVALID_ENTROPY);if(32<r.length)throw new TypeError(INVALID_ENTROPY);if(r.length%4!=0)throw new TypeError(INVALID_ENTROPY);r=(bytesToBinary(_toConsumableArray(r))+deriveChecksumBits(r)).match(/(.{1,11})/g).map(function(r){r=binaryToByte(r);return e[r]});return"あいこくしん"===e[0]?r.join("　"):r.join(" ")}function generateMnemonic(r,e,t){if((r=r||128)%32!=0)throw new TypeError(INVALID_ENTROPY);return entropyToMnemonic((e=e||randomBytes)(r/8),t)}function validateMnemonic(r,e){try{mnemonicToEntropy(r,e)}catch(r){return!1}return!0}function setDefaultWordlist(r){var e=_wordlists_1.wordlists[r];if(!e)throw new Error('Could not find wordlist for language "'+r+'"');DEFAULT_WORDLIST=e}function getDefaultWordlist(){if(!DEFAULT_WORDLIST)throw new Error("No Default Wordlist set");return Object.keys(_wordlists_1.wordlists).filter(function(r){return"JA"!==r&&"EN"!==r&&_wordlists_1.wordlists[r].every(function(r,e){return r===DEFAULT_WORDLIST[e]})})[0]}exports.mnemonicToSeedSync=mnemonicToSeedSync,exports.mnemonicToEntropy=mnemonicToEntropy,exports.entropyToMnemonic=entropyToMnemonic,exports.generateMnemonic=generateMnemonic,exports.validateMnemonic=validateMnemonic,exports.setDefaultWordlist=setDefaultWordlist,exports.getDefaultWordlist=getDefaultWordlist;var _wordlists_2=require("./_wordlists");exports.wordlists=_wordlists_2.wordlists;