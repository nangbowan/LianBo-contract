"use strict";var EC=require("elliptic").ec,ec=new EC("secp256k1"),AES=require("browserify-aes/browser"),createHash=require("create-hash"),paramUtil=require("../../utils/param"),RandomBytes=require("./randombytes"),EC_GROUP_ORDER=Buffer.from("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141","hex"),ZERO32=Buffer.alloc(32,0);function assert(e,r){if(!e)throw new Error(r||"Assertion failed")}function isScalar(e){return Buffer.isBuffer(e)&&32===e.length}function isValidPrivateKey(e){return!!isScalar(e)&&(0<e.compare(ZERO32)&&e.compare(EC_GROUP_ORDER)<0)}function randomBytes(e){return Buffer.from(RandomBytes(e))}function encryptAES(e,r,t){if(!r||!t)throw new Error("aes empty key or iv!");t=AES.createCipheriv("aes-128-gcm",r,t);t.setAutoPadding(!1);e=t.update(e).toString("hex");return t.final(),{data:e,authTag:t.getAuthTag().toString("hex")}}function sha256(e){e=createHash("sha256").update(e).digest();return new Uint8Array(e)}exports.generatePrivate=function(){for(var e=randomBytes(32);!isValidPrivateKey(e);)e=randomBytes(32);return e};var getPublic=exports.getPublic=function(e){return assert(32===e.length,"Bad private key"),assert(isValidPrivateKey(e),"Bad private key"),Buffer.from(ec.keyFromPrivate(e).getPublic("arr"))};exports.sign=function(r,t){return new Promise(function(e){assert(32===r.length,"Bad private key"),assert(isValidPrivateKey(r),"Bad private key"),assert(0<t.length,"Message should not be empty"),assert(t.length<=32,"Message is too long"),e(Buffer.from(ec.sign(t,r,{canonical:!0}).toDER()))})},exports.verify=function(t,a,i){return new Promise(function(e,r){assert(65===t.length||33===t.length,"Bad public key"),65===t.length&&assert(4===t[0],"Bad public key"),33===t.length&&assert(2===t[0]||3===t[0],"Bad public key"),assert(0<a.length,"Message should not be empty"),assert(a.length<=32,"Message is too long"),ec.verify(a,i,t)?e(null):r(new Error("Bad signature"))})};var derive=exports.derive=function(e,r){assert(Buffer.isBuffer(e),"Bad private key"),assert(Buffer.isBuffer(r),"Bad public key"),assert(32===e.length,"Bad private key"),assert(isValidPrivateKey(e),"Bad private key"),assert(65===r.length||33===r.length,"Bad public key"),65===r.length&&assert(4===r[0],"Bad public key"),33===r.length&&assert(2===r[0]||3===r[0],"Bad public key");e=ec.keyFromPrivate(e),r=ec.keyFromPublic(r),r=e.derive(r.getPublic());return Buffer.from(r.toArray())};exports.encrypt=function(e,r,t){for(var a=(t=t||{}).ephemPrivateKey||randomBytes(32);!isValidPrivateKey(a);)a=t.ephemPrivateKey||randomBytes(32);var i=getPublic(a),s=derive(a,e),e=Buffer.alloc(36);s.copy(e,0,0,32),e[35]=1;s=sha256(e),e=t.iv||randomBytes(12),r=encryptAES(r,Buffer.from(s.slice(0,16)),e),s=paramUtil.hexToBuffer(r.data),r=paramUtil.hexToBuffer(r.authTag);return Buffer.concat([i,e,r,s])};