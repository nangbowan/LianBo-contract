"use strict";var base58=require("bs58"),createHash=require("create-hash"),Buffer=require("safe-buffer").Buffer;function encode(e,r){(Array.isArray(e)||e instanceof Uint8Array)&&(e=new Buffer(e));e=sha256x2(r=null!=r?("number"==typeof r&&(r=new Buffer([r])),Buffer.concat([r,e])):e).slice(0,4),e=Buffer.concat([r,e]);return base58.encode(e)}function decode(e,r){var t=base58.decode(e),e=new Buffer(t);if(null==r)n=0;else{var n=(r="number"==typeof r?new Buffer([r]):r).length;if(e.slice(0,n).toString("hex")!==r.toString("hex"))throw new Error("Invalid version")}t=e.slice(-4),r=e.length-4,e=e.slice(0,r),r=sha256x2(e).slice(0,4);if(t.toString("hex")!==r.toString("hex"))throw new Error("Invalid checksum");return e.slice(n)}function isValid(e,r){try{decode(e,r)}catch(e){return!1}return!0}function createEncoder(r){return function(e){return encode(e,r)}}function createDecoder(r){return function(e){return decode(e,r)}}function createValidator(r){return function(e){return isValid(e,r)}}function sha256x2(e){e=createHash("sha256").update(e).digest();return createHash("sha256").update(e).digest()}module.exports={encode:encode,decode:decode,isValid:isValid,createEncoder:createEncoder,createDecoder:createDecoder,createValidator:createValidator};