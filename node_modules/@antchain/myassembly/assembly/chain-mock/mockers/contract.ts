import { Mocker } from '../mocker';
import { Identity } from '../..';

type F_GetGas = () => u64;
type R_GetGas = returnof<F_GetGas>;
class GetGasMocker extends Mocker<F_GetGas, R_GetGas> {}
export const getGas: GetGasMocker = new GetGasMocker(10000);

type F_GetValue = () => u64;
type R_GetValue = returnof<F_GetValue>;
class GetValueMocker extends Mocker<F_GetValue, R_GetValue> {}
export const getValue: GetValueMocker = new GetValueMocker(888);

type F_GetCode = (id: Identity) => string;
type R_GetCode = returnof<F_GetCode>;
class GetCodeMocker extends Mocker<F_GetCode, R_GetCode> {}
export const getCode: GetCodeMocker = new GetCodeMocker('00000000');

type F_GetCodeHash = (id: Identity) => string;
type R_GetCodeHash = returnof<F_GetCodeHash>;
class GetCodeHashMocker extends Mocker<F_GetCodeHash, R_GetCodeHash> {}
export const getCodeHash: GetCodeHashMocker = new GetCodeHashMocker(
  '1234567890123456789012345678901234567890123456789012345678901234',
);
