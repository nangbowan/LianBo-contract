import { Mocker } from '../mocker';
import { ENV, Identity } from '../..';

type F_Digest = (msg: string, type: ENV.DigestType) => string;
type R_Digest = returnof<F_Digest>;
class DigestMocker extends Mocker<F_Digest, R_Digest> {}
export const digest: DigestMocker = new DigestMocker(
  '1234567890123456789012345678901234567890123456789012345678901234',
);

type F_GetTargetAddress = (target: string) => Identity;
type R_GetTargetAddress = returnof<F_GetTargetAddress>;
class GetTargetAddressMocker extends Mocker<F_GetTargetAddress, R_GetTargetAddress> {}
export const getTargetAddress: GetTargetAddressMocker = new GetTargetAddressMocker(
  Identity.fromStr('1234567890123456789012345678901234567890123456789012345678901234'),
);
