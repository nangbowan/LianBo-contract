// 对蚂蚁链 VM 注入的 API 进行声明，跟 mycdt (c++) 保持一致

// 以下参考：mycdt/blob/master/libraries/mychainlib/types.h

export const HashLength: u32 = 32;
export const IdentityLength: u32 = 32;
export const StorageLimit: u32 = 1024 * 1024;

export enum DigestType {
  NOHASH = 0,
  SHA256 = 1,
  SM3 = 2,
  KECCAK = 3,
  SHA1 = 4,
}

// 以下参考：mycdt/blob/master/libraries/mychainlib/contract.hpp

export declare function DelegateCall(
  contract_id_ptr: u32,
  contract_id_length: u32,
  method_ptr: u32,
  method_length: u32,
  params_ptr: u32,
  params_length: u32,
): i32;

export declare function CallContract(
  contract_id_ptr: u32,
  contract_id_length: u32,
  method_ptr: u32,
  method_length: u32,
  value: u64,
  gas: u64,
  params_ptr: u32,
  params_length: u32,
): i32;

export declare function GetCallResultSize(): u32;

export declare function GetCallResult(output_ptr: u32, output_length_ptr: u32): i32;

export declare function __call_evm__(
  contract_id_ptr: u32,
  contract_id_length: u32,
  method_ptr: u32,
  method_length: u32,
  input_ptr: u32,
  input_length: u32,
  gas: u64,
  value: u64,
): i32;

// 以下参考：mycdt/blob/master/libraries/mychainlib/dispatcher.hpp

export declare function SetReturnValue(return_ptr: u32, return_length: u32): i32;

export declare function ReadInterfaceName(name_ptr: u32, name_length_ptr: u32): i32;

export declare function ReadInterfaceParams(params_ptr: u32, params_length_ptr: u32): i32;

export declare function ReadInterfaceNameSize(): u32;

export declare function ReadInterfaceParamsSize(): u32;

// 以下参考：mycdt/blob/master/libraries/mychainlib/chain_api.h

export declare function DeployContract(
  proposer_id_ptr: u32,
  contract_id_ptr: u32,
  code_ptr: u32,
  code_length: u32,
  auth_ptr: u32,
  auth_length: u32,
): u32;

export declare function UpdateContract(contract_id_ptr: u32, code_ptr: u32, code_length: u32): u32;

export declare function UpdateContractStatus(contract_id_ptr: u32, status: u32): u32;

export declare function println(string_ptr: u32, string_length: u32): i32;

export declare function CheckAccount(id_ptr: u32, id_length: u32): i32;

export declare function IsLocalTx(): i32;

export declare function SetStorage(
  key_ptr: u32,
  key_length: u32,
  value_ptr: u32,
  value_length: u32,
): i32;

export declare function GetStorage(
  key_ptr: u32,
  key_length: u32,
  value_ptr: u32,
  value_length_ptr: u32,
): i32;

export declare function GetStorageSize(key_ptr: u32, key_len: u32, value_length_ptr: u32): i32;

export declare function DeleteStorage(key_ptr: u32, key_length: u32): i32;

export declare function GetBlockNumber(): u64;

export declare function GetBlockHash(
  block_number: u64,
  block_hash_ptr: u32,
  block_hash_length_ptr: u32,
): i32;

export declare function GetBlockTimeStamp(): u64;

export declare function GetOrigin(origin_ptr: u32, origin_length_ptr: u32): i32;

export declare function GetAuthMap(
  id_ptr: u32,
  id_length: u32,
  auth_ptr: u32,
  auth_length_ptr: u32,
): i32;

export declare function GetAuthMapInCache(
  id_ptr: u32,
  id_length: u32,
  auth_ptr: u32,
  auth_length_ptr: u32,
): i32;

export declare function GetBalance(id_ptr: u32, id_length: u32, value_ptr: u32): i32;

export declare function GetCode(
  id_ptr: u32,
  id_length: u32,
  code_ptr: u32,
  code_length_ptr: u32,
): i32;

export declare function GetCodeHash(
  id_ptr: u32,
  id_length: u32,
  code_hash_ptr: u32,
  code_hash_length_ptr: u32,
): i32;

export declare function GetRecoverKey(
  id_ptr: u32,
  id_length: u32,
  recover_key_ptr: u32,
  recover_key_length_ptr: u32,
): i32;

export declare function GetAccountStatus(id_ptr: u32, id_length: u32, status_ptr: u32): i32;

export declare function GetTxHash(hash_ptr: u32, hash_length_ptr: u32): i32;

export declare function GetGas(): u64;

export declare function GetValue(): u64;

export declare function GetDataSize(): u32;

export declare function GetData(data_ptr: u32, data_length_ptr: u32): i32;

export declare function TransferBalance(to_ptr: u32, to_length: u32, balance: u64): i32;

export declare function MyAbort(exception_ptr: u32, exception_length: u32): i32;

export declare function Result(output_ptr: u32, output_length: u32): i32;

export declare function Log(
  user_custom_ptr: u32,
  user_custom_length: u32,
  topics_ptr: u32,
  topics_length: u32,
): i32;

export declare function GetSelf(id_ptr: u32, id_length_ptr: u32): i32;

export declare function GetSender(id_ptr: u32, id_length_ptr: u32): i32;

export declare function VerifyRsa(
  pk_ptr: u32,
  pk_length: u32,
  sig_ptr: u32,
  sig_length: u32,
  message_ptr: u32,
  message_length: u32,
): i32;

export declare function VerifyRsa2(
  pk_ptr: u32,
  pk_length: u32,
  sig_ptr: u32,
  sig_length: u32,
  message_ptr: u32,
  message_length: u32,
  hash_type: u16,
): i32;

export declare function VerifyMessageSM2(
  pk_ptr: u32,
  pk_length: u32,
  sig_ptr: u32,
  sig_length: u32,
  message_ptr: u32,
  message_length: u32,
  hash_type: u16,
): i32;

export declare function Ecrecovery(
  hash_ptr: u32,
  hash_length: u32,
  sig_ptr: u32,
  sig_length: u32,
  id_ptr: u32,
  id_length_ptr: u32,
): i32;

export declare function Digest(
  in_ptr: u32,
  in_length: u32,
  type: u16,
  output_ptr: u32,
  output_length_ptr: u32,
): i32;

export declare function Base64Encode(
  in_ptr: u32,
  in_length: u32,
  output_ptr: u32,
  output_length_ptr: u32,
): i32;

export declare function Base64Decode(
  in_ptr: u32,
  in_length: u32,
  output_ptr: u32,
  output_length_ptr: u32,
): i32;

export declare function RangeProofVerify(
  ret_offset_ptr: u32,
  proof_ptr: u32,
  proof_length: u32,
  pc_list_ptr: u32,
  pc_list_length: u32,
): i32;

export declare function AddPedersenCommit(
  ret_offset_ptr: u32,
  pc_result_ptr: u32,
  pc_result_length: u32,
  pc_left_ptr: u32,
  pc_left_length: u32,
  pc_right_ptr: u32,
  pc_right_length: u32,
): i32;

export declare function SubPedersenCommit(
  ret_offset_ptr: u32,
  pc_result_ptr: u32,
  pc_result_length: u32,
  pc_left_ptr: u32,
  pc_left_length: u32,
  pc_right_ptr: u32,
  pc_right_length: u32,
): i32;

export declare function CalculatePedersenCommit(
  ret_offset_ptr: u32,
  dst_pc_ptr: u32,
  dst_pc_length: u32,
  src_pc_ptr: u32,
  src_pc_length: u32,
  positive_ptr: u32,
  positive_length: u32,
  negative_ptr: u32,
  negative_length: u32,
): i32;

export declare function PedersenCommitEqualityVerify(
  ret_offset_ptr: u32,
  positive_ptr: u32,
  positive_length: u32,
  negative_ptr: u32,
  negative_length: u32,
): i32;

export declare function VerifyMessageECCK1(
  pubkey_ptr: u32,
  pubkey_length: u32,
  sig_ptr: u32,
  sig_length: u32,
  message_ptr: u32,
  message_length: u32,
  hash_type: u32,
): u32;

export declare function VerifyMessageECCR1(
  pubkey_ptr: u32,
  pubkey_length: u32,
  sig_ptr: u32,
  sig_length: u32,
  message_ptr: u32,
  message_length: u32,
  hash_type: u32,
): u32;

export declare function CreateContract(
  src_id_ptr: u32,
  src_id_length: u32,
  new_id_ptr: u32,
  new_id_length: u32,
): i32;

export declare function GetTransaction(
  field: u32,
  input_ptr: u32,
  input_length: u32,
  output_length_ptr: u32,
): u32;

export declare function GetConfidentialDeposit(
  field: u32,
  input_ptr: u32,
  input_length: u32,
  output_length_ptr: u32,
): u32;

export declare function GetRelatedTransactionListSize(
  recipient_id_ptr: u32,
  recipient_id_length: u32,
  deposit_flag: u64,
  count_ptr: u32,
): u32;

export declare function GetRelatedTransactionList(
  recipient_id_ptr: u32,
  recipient_id_length: u32,
  deposit_flag: u64,
  start_index: u64,
  size: u32,
  output_length_ptr: u32,
): u32;

export declare function ReadBuffer(output_ptr: u32, output_length: u32): u32;

export declare function ReadBufferRef(output_ptr: u32, output_length: u32): u32;

export declare function LiftedElgamalContractHomomorphicAdd(
  first_ptr: u32,
  first_length: u32,
  second_ptr: u32,
  second_length: u32,
  output_length_ptr: u32,
): i32;

export declare function LiftedElgamalContractHomomorphicSub(
  first_ptr: u32,
  first_length: u32,
  second_ptr: u32,
  second_length: u32,
  output_length_ptr: u32,
): i32;

export declare function LiftedElgamalScalarMutiply(
  src_ptr: u32,
  src_length: u32,
  scalar: u64,
  output_length_ptr: u32,
): i32;

export declare function LiftedElgamalContractZeroCheckVerify(
  ciphertext_ptr: u32,
  ciphertext_length: u32,
  proof_ptr: u32,
  proof_length: u32,
  verify_result_ptr: u32,
): i32;

export declare function LiftedElgamalContractRangeVerify(
  ciphertext_ptr: u32,
  ciphertext_length: u32,
  per_value_bit_size: u32,
  public_key_ptr: u32,
  public_key_length: u32,
  proof_ptr: u32,
  proof_length: u32,
  verify_result_ptr: u32,
): i32;

export declare function BellmanSnarkVerify(
  verification_key_ptr: u32,
  verification_key_length: u32,
  input_ptr: u32,
  input_length: u32,
  proof_ptr: u32,
  proof_length: u32,
): i32;

export declare function DCGetStorageSize(
  dc_id_ptr: u32,
  db_id: u32,
  key_ptr: u32,
  key_length: u32,
  len_offset_ptr: u32,
): u32;

export declare function DCSetStorage(
  dc_id_ptr: u32,
  db_id: u32,
  key_ptr: u32,
  key_length: u32,
  value_ptr: u32,
  value_length: u32,
): u32;

export declare function DCDeleteStorage(
  dc_id_ptr: u32,
  db_id: u32,
  key_ptr: u32,
  key_length: u32,
): u32;

export declare function DCSetAcl(
  contract_id_ptr: u32,
  db_id: u32,
  objects_ptr: u32,
  objects_length: u32,
): u32;

export declare function GrayscaleDeployContract(
  contract_id_ptr: u32,
  contract_code_ptr: u32,
  contract_code_length: u32,
): u32;

export declare function GrayscaleVerification(contract_id_ptr: u32): u32;

export declare function GrayscaleVersionSwitchBack(contract_id_ptr: u32): u32;

export declare function GrayscaleUpdateContract(contract_id_ptr: u32): u32;

// 0: Unknown
// 1: SHA256
// 2: SM3
// 3: KECCAK256
export declare function GetDigestType(): u32;
